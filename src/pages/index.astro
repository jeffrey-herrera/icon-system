---
export const prerender = false;

import Layout from '../layouts/Layout.astro';
import { loadIcons } from '../utils/serverIconLoader';
import { getCategories } from '../utils/iconLoader';
import IconLibrary from '../components/IconLibrary';
import Footer from '../components/Footer';

// Load icons server-side (will be hydrated client-side)
const icons = await loadIcons();
const categories = getCategories(icons);

// For SEO and initial render optimization
const seoMeta = {
  title: 'Braze Icon Library - 1,190 Icons Across 21 Categories',
  description: 'Professional icon library with stroke, solid, and duocolor variants. Export as SVG or PNG with multi-style support.',
  totalIcons: 1190,
  totalCategories: 21
};
---

<script is:inline>
  // Disable React DevTools to prevent console errors
  if (typeof window !== 'undefined') {
    // Disable React DevTools
    if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
      window.__REACT_DEVTOOLS_GLOBAL_HOOK__.isDisabled = true;
      window.__REACT_DEVTOOLS_GLOBAL_HOOK__.supportsFiber = false;
      window.__REACT_DEVTOOLS_GLOBAL_HOOK__.supports = () => false;
      window.__REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberRoot = () => {};
      window.__REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberUnmount = () => {};
    }
    
    // Suppress runtime errors from extensions
    const originalError = console.error;
    console.error = (...args) => {
      const message = args[0]?.toString() || '';
      if (
        message.includes('message port closed') ||
        message.includes('Extension context invalidated') ||
        message.includes('react-devtools') ||
        message.includes('runtime.lastError')
      ) {
        return; // Suppress these specific errors
      }
      originalError.apply(console, args);
    };
  }
</script>

<Layout title="Icon System">
	<main class="container mx-auto px-4 py-4">
		<div class="flex flex-col gap-4">
			<IconLibrary client:load icons={icons} categories={categories} />
		</div>
	</main>
	<Footer client:load />
</Layout>
